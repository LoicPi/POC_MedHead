# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pipeline CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:    
  tests:
    name: Unit and Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Set up a cache for Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test --file pom.xml
      - name: Create folder report_test
        run: mkdir report_test
      - name: Copy css in report_test
        run: cp -r ms-emergency/target/site/jacoco/jacoco-resources report_test
      - name: copy jacoco report test of ms-emergency in report_test
        run: cp ms-emergency/target/site/jacoco/index.html report_test/index_msemergency.html
      - name: copy surefire report test of ms-emergency in report_test
        run: cp ms-emergency/target/surefire-reports/*.txt  report_test/
      - name : Create Report Tests Artifact
        uses: actions/upload-artifact@v3  # upload test results
        with:
          name: Tests
          path: report_test

  #Sonar's Job
  sonar:
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=LoicPi_POC_MedHead
        
  build:
    needs: sonar
    name: Build package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Create folder staging
      run: mkdir staging
    - name: Build ms-emergency with Maven
      run: mvn -B package --file ms-emergency/pom.xml -Dmaven.test.skip
    - name: Copy jar in staging
      run: cp ms-emergency/target/*.jar staging
    - name: Set up a cache for Maven
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build ms-authorization with Maven
      run: mvn -B package --file ms-authorization/pom.xml -Dmaven.test.skip
    - name: Copy jar in staging
      run: cp ms-authorization/target/*.jar staging
    - name: Set up a cache for Maven
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build ms-hospital with Maven
      run: mvn -B package --file ms-hospital/pom.xml -Dmaven.test.skip
    - name: Copy jar in staging
      run: cp ms-hospital/target/*.jar staging
    - name: Set up a cache for Maven
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build ms-bedavailable with Maven
      run: mvn -B package --file ms-bedavailable/pom.xml -Dmaven.test.skip
    - name: Copy jar in staging
      run: cp ms-bedavailable/target/*.jar staging
    - name: Set up a cache for Maven
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Persist workflow data as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: github-actions-artifact
        path: staging

